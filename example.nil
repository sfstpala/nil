(print (+ (list 1 2 3) (list 4 5)))

(print (^ 2.0 0.5))
(print ((lambda xs) 1 2 3))

(define m (list 1 2 3))
(print m)
(print (car m))
(print (cdr m))

(define product (lambda (m)
    (if m
            (* (car m) (product (cdr m)))
        1)))

(print (product (list 1 2 3 4)))


(define M (lambda (n)
    (if (> n 100.0)
            (- n 10.0)
        (M (M (+ n 11.0))))))

(define loop (lambda (n)
    (print (M 99.0))
    (if (> n 1.0) (loop (- n 1.0)) 0.0)))

(loop 2.0)

